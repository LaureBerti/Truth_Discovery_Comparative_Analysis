%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Apr 28 11:23:32 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (dalia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 28 11:23:32 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 2081 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.5) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2391 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.55) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2701 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.6) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3011 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.65) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3321 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.7) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3631 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.75) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3941 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.8) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4251 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.85) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4561 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.9) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4871 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.95) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Voting) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1388 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(TruthFinder) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2005 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Cosine) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2623 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(3-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3241 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(2-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3859 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuSim) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
4476 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Depen) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
5094 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Accu) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
5712 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuNoDep) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
6329 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(SimpleLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
6947 2081 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(GuessLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
770 4871 N
0 -2790 V
6177 0 V
0 2790 V
-6177 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 200 scalefont setfont
112 3476 M
currentpoint gsave translate -270 rotate 0 0 M
(Precision) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
/Helvetica findfont 200 scalefont setfont
3858 1218 M
(Model) Cshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LC1 setrgbcolor
LCb setrgbcolor
5171 973 M
(Flight Dataset) Rshow
LT0
LC1 setrgbcolor
5255 973 M
399 0 V
770 4068 M
618 -146 V
617 531 V
2623 3338 L
618 543 V
618 710 V
617 -524 V
618 563 V
618 -742 V
617 -690 V
618 634 V
770 4068 TriUF
1388 3922 TriUF
2005 4453 TriUF
2623 3338 TriUF
3241 3881 TriUF
3859 4591 TriUF
4476 4067 TriUF
5094 4630 TriUF
5712 3888 TriUF
6329 3198 TriUF
6947 3832 TriUF
5454 973 TriUF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
5171 833 M
(Weather Dataset) Rshow
LT0
LC2 setrgbcolor
5255 833 M
399 0 V
770 2890 M
618 86 V
617 -100 V
618 -6 V
618 23 V
618 -763 V
617 760 V
618 -666 V
618 751 V
617 -13 V
618 -25 V
770 2890 BoxF
1388 2976 BoxF
2005 2876 BoxF
2623 2870 BoxF
3241 2893 BoxF
3859 2130 BoxF
4476 2890 BoxF
5094 2224 BoxF
5712 2975 BoxF
6329 2962 BoxF
6947 2937 BoxF
5454 833 BoxF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT0
LC3 setrgbcolor
LCb setrgbcolor
5171 693 M
(Population Dataset) Rshow
LT0
LC3 setrgbcolor
5255 693 M
399 0 V
770 4069 M
618 185 V
617 -123 V
618 -42 V
618 -906 V
618 886 V
617 -21 V
618 186 V
618 41 V
617 -103 V
618 41 V
770 4069 TriDF
1388 4254 TriDF
2005 4131 TriDF
2623 4089 TriDF
3241 3183 TriDF
3859 4069 TriDF
4476 4048 TriDF
5094 4234 TriDF
5712 4275 TriDF
6329 4172 TriDF
6947 4213 TriDF
5454 693 TriDF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
5171 553 M
(Biography Dataset) Rshow
LT0
LC0 setrgbcolor
5255 553 M
399 0 V
770 4573 M
618 0 V
617 -21 V
618 30 V
618 19 V
2471 -34 V
617 -529 V
618 0 V
770 4573 CircleF
1388 4573 CircleF
2005 4552 CircleF
2623 4582 CircleF
3241 4601 CircleF
5712 4567 CircleF
6329 4038 CircleF
6947 4038 CircleF
5454 553 CircleF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
5171 413 M
(S=50-D=1000-Cov=E-GT=U25-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
5255 413 M
399 0 V
770 3628 M
618 9 V
617 -117 V
2623 2415 L
618 1165 V
618 44 V
617 2 V
618 -12 V
618 -4 V
617 2 V
618 -3 V
770 3628 Circle
1388 3637 Circle
2005 3520 Circle
2623 2415 Circle
3241 3580 Circle
3859 3624 Circle
4476 3626 Circle
5094 3614 Circle
5712 3610 Circle
6329 3612 Circle
6947 3609 Circle
5454 413 Circle
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
5171 273 M
(S=50-D=1000-Cov=E-GT=FP-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
5255 273 M
399 0 V
770 2879 M
618 217 V
617 257 V
2623 2243 L
618 712 V
618 -476 V
617 104 V
618 -107 V
618 1026 V
617 73 V
618 -72 V
770 2879 Box
1388 3096 Box
2005 3353 Box
2623 2243 Box
3241 2955 Box
3859 2479 Box
4476 2583 Box
5094 2476 Box
5712 3502 Box
6329 3575 Box
6947 3503 Box
5454 273 Box
% End plot #6
% Begin plot #7
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
5171 133 M
(S=50-D=1000-Cov=E-GT=80-P-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
5255 133 M
399 0 V
770 3888 M
618 148 V
617 115 V
2623 2824 L
618 1106 V
618 158 V
617 -297 V
618 315 V
618 49 V
617 9 V
618 -5 V
770 3888 TriU
1388 4036 TriU
2005 4151 TriU
2623 2824 TriU
3241 3930 TriU
3859 4088 TriU
4476 3791 TriU
5094 4106 TriU
5712 4155 TriU
6329 4164 TriU
6947 4159 TriU
5454 133 TriU
% End plot #7
1.000 UL
LTb
770 4871 N
0 -2790 V
6177 0 V
0 2790 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
