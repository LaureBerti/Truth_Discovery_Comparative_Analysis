%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Apr 28 11:24:40 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (dalia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 28 11:24:40 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 961 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
686 961 M
( 0.5) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 1395 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.55) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 1830 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.6) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2264 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.65) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2699 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.7) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3133 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.75) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3568 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.8) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4002 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.85) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4437 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.9) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4871 M
63 0 V
2355 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-2439 0 R
( 0.95) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Voting) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1012 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(TruthFinder) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1254 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Cosine) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1495 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(3-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1737 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(2-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1979 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuSim) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2221 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Depen) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2463 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Accu) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2704 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuNoDep) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2946 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(SimpleLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3188 961 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(GuessLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
770 4871 N
770 961 L
2418 0 V
0 3910 V
-2418 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 200 scalefont setfont
112 2916 M
currentpoint gsave translate -270 rotate 0 0 M
(Precision) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
/Helvetica findfont 200 scalefont setfont
1979 98 M
(Model) Cshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LC1 setrgbcolor
LCb setrgbcolor
6548 4801 M
(Flight Dataset) Rshow
LT0
LC1 setrgbcolor
6632 4801 M
399 0 V
770 3746 M
242 -204 V
242 742 V
1495 2723 L
242 760 V
242 996 V
242 -734 V
242 788 V
2704 3494 L
242 -967 V
242 888 V
770 3746 TriUF
1012 3542 TriUF
1254 4284 TriUF
1495 2723 TriUF
1737 3483 TriUF
1979 4479 TriUF
2221 3745 TriUF
2463 4533 TriUF
2704 3494 TriUF
2946 2527 TriUF
3188 3415 TriUF
6831 4801 TriUF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
6548 4661 M
(Weather Dataset) Rshow
LT0
LC2 setrgbcolor
6632 4661 M
399 0 V
770 2095 M
242 120 V
242 -139 V
241 -10 V
242 33 V
1979 1030 L
242 1065 V
242 -933 V
241 1052 V
242 -18 V
242 -36 V
770 2095 BoxF
1012 2215 BoxF
1254 2076 BoxF
1495 2066 BoxF
1737 2099 BoxF
1979 1030 BoxF
2221 2095 BoxF
2463 1162 BoxF
2704 2214 BoxF
2946 2196 BoxF
3188 2160 BoxF
6831 4661 BoxF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT0
LC3 setrgbcolor
LCb setrgbcolor
6548 4521 M
(Population Dataset) Rshow
LT0
LC3 setrgbcolor
6632 4521 M
399 0 V
770 3747 M
242 259 V
242 -172 V
241 -59 V
1737 2505 L
242 1242 V
242 -29 V
242 260 V
241 57 V
242 -144 V
242 58 V
770 3747 TriDF
1012 4006 TriDF
1254 3834 TriDF
1495 3775 TriDF
1737 2505 TriDF
1979 3747 TriDF
2221 3718 TriDF
2463 3978 TriDF
2704 4035 TriDF
2946 3891 TriDF
3188 3949 TriDF
6831 4521 TriDF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6548 4381 M
(Biography Dataset) Rshow
LT0
LC0 setrgbcolor
6632 4381 M
399 0 V
770 4454 M
242 0 V
242 -30 V
241 42 V
242 26 V
967 -47 V
242 -741 V
242 0 V
770 4454 CircleF
1012 4454 CircleF
1254 4424 CircleF
1495 4466 CircleF
1737 4492 CircleF
2704 4445 CircleF
2946 3704 CircleF
3188 3704 CircleF
6831 4381 CircleF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
6548 4241 M
(S=50-D=1000-Cov=E-GT=U25-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
6632 4241 M
399 0 V
770 3129 M
242 12 V
242 -163 V
1495 1428 L
242 1634 V
242 61 V
242 3 V
242 -17 V
241 -5 V
242 2 V
242 -3 V
770 3129 Circle
1012 3141 Circle
1254 2978 Circle
1495 1428 Circle
1737 3062 Circle
1979 3123 Circle
2221 3126 Circle
2463 3109 Circle
2704 3104 Circle
2946 3106 Circle
3188 3103 Circle
6831 4241 Circle
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
6548 4101 M
(S=50-D=1000-Cov=E-GT=FP-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
6632 4101 M
399 0 V
770 2079 M
242 304 V
242 360 V
1495 1188 L
242 998 V
242 -667 V
242 145 V
242 -150 V
241 1438 V
242 102 V
242 -101 V
770 2079 Box
1012 2383 Box
1254 2743 Box
1495 1188 Box
1737 2186 Box
1979 1519 Box
2221 1664 Box
2463 1514 Box
2704 2952 Box
2946 3054 Box
3188 2953 Box
6831 4101 Box
% End plot #6
% Begin plot #7
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
6548 3961 M
(S=50-D=1000-Cov=E-GT=80-P-CONF=E-DEP=N) Rshow
LT0
LCb setrgbcolor
6632 3961 M
399 0 V
770 3494 M
242 207 V
242 161 V
1495 2002 L
242 1550 V
242 222 V
242 -417 V
242 442 V
241 68 V
242 13 V
242 -6 V
770 3494 TriU
1012 3701 TriU
1254 3862 TriU
1495 2002 TriU
1737 3552 TriU
1979 3774 TriU
2221 3357 TriU
2463 3799 TriU
2704 3867 TriU
2946 3880 TriU
3188 3874 TriU
6831 3961 TriU
% End plot #7
1.000 UL
LTb
770 4871 N
770 961 L
2418 0 V
0 3910 V
-2418 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
