%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed May  7 16:36:53 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/dalia/DAFNAData/experiments/charts/chartsCollection/diffValPlot/all/Precision.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (dalia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May  7 16:36:53 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 1101 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.5) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 1458 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.55) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 1814 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.6) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2171 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.65) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2528 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.7) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 2884 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.75) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3241 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.8) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3598 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.85) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 3954 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.9) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 4311 M
63 0 V
6114 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
-6198 0 R
( 0.95) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Voting) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1347 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(TruthFinder) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1925 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Cosine) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2502 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(3-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3079 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(2-Estimates) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3656 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuSim) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
4234 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Depen) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
4811 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(Accu) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
5388 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(AccuNoDep) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
5966 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(SimpleLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
6543 1101 M
0 63 V
/Helvetica findfont 180 scalefont setfont
0 -147 R
currentpoint gsave translate -45 rotate 0 0 M
(GuessLCA) Lshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
770 4311 N
0 -3210 V
6177 0 V
0 3210 V
-6177 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 200 scalefont setfont
112 2706 M
currentpoint gsave translate -270 rotate 0 0 M
(Precision) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
/Helvetica findfont 180 scalefont setfont
3858 238 M
() Cshow
3858 58 M
(Model) Cshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LC1 setrgbcolor
LCb setrgbcolor
2168 4907 M
(Flight Dataset) Rshow
LT0
LC1 setrgbcolor
2252 4907 M
399 0 V
770 3387 M
577 -167 V
578 609 V
2502 2548 L
577 624 V
577 817 V
578 -602 V
577 647 V
577 -854 V
578 -794 V
577 729 V
770 3387 TriUF
1347 3220 TriUF
1925 3829 TriUF
2502 2548 TriUF
3079 3172 TriUF
3656 3989 TriUF
4234 3387 TriUF
4811 4034 TriUF
5388 3180 TriUF
5966 2386 TriUF
6543 3115 TriUF
2451 4907 TriUF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
2168 4767 M
(Weather Dataset) Rshow
LT0
LC2 setrgbcolor
2252 4767 M
399 0 V
770 2032 M
577 98 V
578 -114 V
577 -8 V
577 27 V
577 -878 V
578 875 V
577 -766 V
577 864 V
578 -15 V
577 -30 V
770 2032 BoxF
1347 2130 BoxF
1925 2016 BoxF
2502 2008 BoxF
3079 2035 BoxF
3656 1157 BoxF
4234 2032 BoxF
4811 1266 BoxF
5388 2130 BoxF
5966 2115 BoxF
6543 2085 BoxF
2451 4767 BoxF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT0
LC3 setrgbcolor
LCb setrgbcolor
2168 4627 M
(Population Dataset) Rshow
LT0
LC3 setrgbcolor
2252 4627 M
399 0 V
770 3388 M
577 213 V
578 -142 V
577 -48 V
3079 2369 L
577 1019 V
578 -24 V
577 214 V
577 47 V
578 -119 V
577 48 V
770 3388 TriDF
1347 3601 TriDF
1925 3459 TriDF
2502 3411 TriDF
3079 2369 TriDF
3656 3388 TriDF
4234 3364 TriDF
4811 3578 TriDF
5388 3625 TriDF
5966 3506 TriDF
6543 3554 TriDF
2451 4627 TriDF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
4415 4907 M
(Biography Dataset) Rshow
LT0
LC0 setrgbcolor
4499 4907 M
399 0 V
770 2576 M
577 -3 V
578 -19 V
577 16 V
577 23 V
2309 -28 V
770 2576 CircleF
1347 2573 CircleF
1925 2554 CircleF
2502 2570 CircleF
3079 2593 CircleF
5388 2565 CircleF
4698 4907 CircleF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
4415 4767 M
(Cov=E-CONF=E-GT=U25) Rshow
LT0
LCb setrgbcolor
4499 4767 M
399 0 V
770 2881 M
577 10 V
578 -134 V
2502 1485 L
577 1341 V
577 50 V
578 3 V
577 -15 V
577 -4 V
578 2 V
577 -3 V
770 2881 Circle
1347 2891 Circle
1925 2757 Circle
2502 1485 Circle
3079 2826 Circle
3656 2876 Circle
4234 2879 Circle
4811 2864 Circle
5388 2860 Circle
5966 2862 Circle
6543 2859 Circle
4698 4767 Circle
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
4415 4627 M
(Cov=E-CONF=E-GT=FP) Rshow
LT0
LCb setrgbcolor
4499 4627 M
399 0 V
770 2019 M
577 250 V
578 295 V
2502 1287 L
577 820 V
577 -548 V
578 119 V
577 -123 V
577 1181 V
578 83 V
577 -82 V
770 2019 Box
1347 2269 Box
1925 2564 Box
2502 1287 Box
3079 2107 Box
3656 1559 Box
4234 1678 Box
4811 1555 Box
5388 2736 Box
5966 2819 Box
6543 2737 Box
4698 4627 Box
% End plot #6
% Begin plot #7
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
LCb setrgbcolor
6662 4907 M
(Cov=E-CONF=E-GT=80-P) Rshow
LT0
LCb setrgbcolor
6746 4907 M
399 0 V
770 3180 M
577 171 V
578 132 V
2502 1956 L
577 1272 V
577 182 V
578 -342 V
577 363 V
577 56 V
578 11 V
577 -6 V
770 3180 TriU
1347 3351 TriU
1925 3483 TriU
2502 1956 TriU
3079 3228 TriU
3656 3410 TriU
4234 3068 TriU
4811 3431 TriU
5388 3487 TriU
5966 3498 TriU
6543 3492 TriU
6945 4907 TriU
% End plot #7
1.000 UL
LTb
770 4311 N
0 -3210 V
6177 0 V
0 3210 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
